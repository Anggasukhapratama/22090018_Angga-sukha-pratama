/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Cafenice;
import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.ChecksumException;
import com.google.zxing.FormatException;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.image.BufferedImage;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ASUS
 */
public class CameraQr extends javax.swing.JFrame {
      private Bill billFrame; 
     private void sendScannedResultToBill(String result) {
           if (billFrame != null) {
            billFrame.handleScannedResult(result);
      
     }
     }
    
 private Webcam webcam;
    /**
     * Creates new form CameraQr
     */
    public CameraQr() {
        initComponents();
         initializeWebcam();
    }
    private String decodeQRCode(BufferedImage image) throws NotFoundException, ChecksumException, FormatException {
        BinaryBitmap binaryBitmap = new BinaryBitmap(new HybridBinarizer(new BufferedImageLuminanceSource(image)));
        Result result = new com.google.zxing.qrcode.QRCodeReader().decode(binaryBitmap);
        return result.getText();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelresult = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtresult = new javax.swing.JTextField();
        btntambahketbl = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelresult.setBackground(new java.awt.Color(255, 255, 255));
        panelresult.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(panelresult, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 370, 290));

        jLabel1.setText("RESULT");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, -1));

        txtresult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtresultActionPerformed(evt);
            }
        });
        jPanel1.add(txtresult, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 200, 40));

        btntambahketbl.setText("Tambah ke tabel");
        btntambahketbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntambahketblActionPerformed(evt);
            }
        });
        jPanel1.add(btntambahketbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 360, 160, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtresultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtresultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtresultActionPerformed

    private void btntambahketblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntambahketblActionPerformed
         billFrame.handleScannedResult(txtresult.getText());
    }//GEN-LAST:event_btntambahketblActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CameraQr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CameraQr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CameraQr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CameraQr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CameraQr().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btntambahketbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelresult;
    private javax.swing.JTextField txtresult;
    // End of variables declaration//GEN-END:variables
 void startCapture() {
        Thread captureThread = new Thread(() -> {
            while (true) {
                try {
                    captureAndDecodeQRCode();
                } catch (ChecksumException ex) {
                    Logger.getLogger(CameraQr.class.getName()).log(Level.SEVERE, null, ex);
                } catch (FormatException ex) {
                    Logger.getLogger(CameraQr.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        captureThread.start();
 }
    private void initializeWebcam() {
          webcam = Webcam.getDefault();
    if (webcam != null) {
        WebcamPanel webcamPanel = new WebcamPanel(webcam);
        panelresult.add(webcamPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 370, 290));
        startCapture();
    }
    }
    private void captureAndDecodeQRCode() throws ChecksumException, FormatException {
     BufferedImage image;
         image = webcam.getImage();
    try {
        if (image != null) {
            String result = decodeQRCode(image);
            txtresult.setText(result);

            // Mengirim hasil pemindaian ke frame Bill
            sendScannedResultToBill(result);
        } else {
            txtresult.setText("Error capturing image");
        }
    } catch (NotFoundException e) {
        txtresult.setText("QR Code not found");
    }
    
}
    void setBillFrame(Bill billFrame) {
               this.billFrame = billFrame;
    }
}
