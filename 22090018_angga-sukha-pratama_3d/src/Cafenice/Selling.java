/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Cafenice;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.Writer;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.oned.Code128Writer;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import java.io.File;
import java.nio.file.FileSystems;
import java.nio.file.Files;
import java.nio.file.Path;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.Writer;
import com.google.zxing.qrcode.QRCodeWriter;

/**
 *
 * @author ASUS
 */
public class Selling extends javax.swing.JFrame {
private Connection connection;

    /**
     * Creates new form Selling
     */
    public Selling() {
        initComponents();
       try {
        connection = Koneksi.DatabaseConnection.getConnection();
        displayItemList();
        displayTagihanTable();
       
    
        tbllist.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tbllist.getSelectedRow();
                    if (selectedRow != -1) {
                        Object namaValue = tbllist.getValueAt(selectedRow, 1); // Assuming 'nama' is in the second column
                        Object hargaValue = tbllist.getValueAt(selectedRow, 3); // Assuming 'harga' is in the fourth column

                        txtnama.setText(String.valueOf(namaValue));
                        txtharga.setText(String.valueOf(hargaValue));
                    
                        btnhapus.setText("Hapus");
                        btnhapus.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                        btnhapusActionPerformed(evt);
        }
    });
                    }
                }
            }
        });
    } catch (SQLException e) {
        e.printStackTrace();
        
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtnama = new javax.swing.JTextField();
        txtharga = new javax.swing.JTextField();
        txtseller = new javax.swing.JTextField();
        txtquantity = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbllist = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbltagihan = new javax.swing.JTable();
        btnbarcode = new javax.swing.JButton();
        btnhapus = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btntambah = new javax.swing.JButton();
        billto = new javax.swing.JLabel();
        Logout = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtnama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnamaActionPerformed(evt);
            }
        });
        jPanel2.add(txtnama, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 244, 36));

        txtharga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txthargaActionPerformed(evt);
            }
        });
        jPanel2.add(txtharga, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 244, 36));

        txtseller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsellerActionPerformed(evt);
            }
        });
        jPanel2.add(txtseller, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 244, 36));

        txtquantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtquantityActionPerformed(evt);
            }
        });
        jPanel2.add(txtquantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 244, 36));

        tbllist.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        tbllist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nomor", "nama", "kategori", "harga"
            }
        ));
        tbllist.setGridColor(new java.awt.Color(255, 255, 255));
        tbllist.setRowHeight(29);
        tbllist.setSelectionBackground(new java.awt.Color(153, 153, 153));
        tbllist.setShowHorizontalLines(true);
        jScrollPane1.setViewportView(tbllist);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 80, -1, 212));

        tbltagihan.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N
        tbltagihan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nama", "Harga", "Quantity", "Seller", "Tanggal", "Total"
            }
        ));
        tbltagihan.setRowHeight(29);
        tbltagihan.setSelectionBackground(new java.awt.Color(153, 153, 153));
        tbltagihan.setShowHorizontalLines(true);
        jScrollPane2.setViewportView(tbltagihan);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 367, 990, 240));

        btnbarcode.setBackground(new java.awt.Color(0, 204, 204));
        btnbarcode.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        btnbarcode.setForeground(new java.awt.Color(255, 255, 255));
        btnbarcode.setText("Barcode");
        btnbarcode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnbarcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbarcodeActionPerformed(evt);
            }
        });
        jPanel2.add(btnbarcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 620, 244, 39));

        btnhapus.setBackground(new java.awt.Color(0, 204, 204));
        btnhapus.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        btnhapus.setForeground(new java.awt.Color(255, 255, 255));
        btnhapus.setText("Hapus");
        btnhapus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusActionPerformed(evt);
            }
        });
        jPanel2.add(btnhapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, 244, 39));

        jLabel2.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Seller");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("List Table");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 50, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Harga");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Quantity");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Tagihan tabel");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, -1, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Nama");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        btntambah.setBackground(new java.awt.Color(0, 204, 204));
        btntambah.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        btntambah.setForeground(new java.awt.Color(255, 255, 255));
        btntambah.setText("Tambahkan Tagihan");
        btntambah.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btntambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntambahActionPerformed(evt);
            }
        });
        jPanel2.add(btntambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 244, 39));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 1000, 670));

        billto.setBackground(new java.awt.Color(255, 255, 255));
        billto.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        billto.setForeground(new java.awt.Color(0, 153, 153));
        billto.setText("Bill");
        billto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billtoMouseClicked(evt);
            }
        });
        jPanel1.add(billto, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        Logout.setBackground(new java.awt.Color(255, 255, 255));
        Logout.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        Logout.setForeground(new java.awt.Color(0, 153, 153));
        Logout.setText("LOG OUT");
        Logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutMouseClicked(evt);
            }
        });
        jPanel1.add(Logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 560, -1, -1));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 153));
        jLabel8.setText("Selling");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1170, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutMouseClicked
        Login login = new Login();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogoutMouseClicked

    private void txtquantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtquantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtquantityActionPerformed

    private void txthargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txthargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txthargaActionPerformed

    private void txtnamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnamaActionPerformed

    private void txtsellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsellerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsellerActionPerformed

    private void btnbarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbarcodeActionPerformed
   int selectedRow = tbltagihan.getSelectedRow();
    if (selectedRow != -1) {
        int id = (int) tbltagihan.getValueAt(selectedRow, 0);
        String nama = (String) tbltagihan.getValueAt(selectedRow, 1);
        String seller = (String) tbltagihan.getValueAt(selectedRow, 4);
        double harga = (double) tbltagihan.getValueAt(selectedRow, 2);
        int quantity = (int) tbltagihan.getValueAt(selectedRow, 3);
        double total = (double) tbltagihan.getValueAt(selectedRow, 6);
        String tanggal = (String) tbltagihan.getValueAt(selectedRow, 5);

        generateQRCode(id, nama, seller, harga, quantity, total, tanggal);
    } else {
        JOptionPane.showMessageDialog(this, "Pilih baris tagihan terlebih dahulu", "Peringatan", JOptionPane.WARNING_MESSAGE);
    }  
      }
private void generateQRCode(int id, String nama, String seller, double harga, int quantity, double total, String tanggal) {
    try {
        String content = id + "_" + nama + "_" + seller + "_" + harga + "_" + quantity + "_" + total + "_" + tanggal;

        BarcodeFormat barcodeFormat = BarcodeFormat.QR_CODE;
        Writer codeWriter = new QRCodeWriter();
        BitMatrix bitMatrix = codeWriter.encode(content, barcodeFormat, 300, 300);

        long timestamp = System.currentTimeMillis();
        String fileName = "D:" + File.separator + "Barcode" + File.separator + "qrcode_" + timestamp + ".png";
        Path path = FileSystems.getDefault().getPath(fileName);
        MatrixToImageWriter.writeToPath(bitMatrix, "PNG", path);

        JOptionPane.showMessageDialog(this, "QR Code generated successfully and saved to: " + fileName, "Success", JOptionPane.INFORMATION_MESSAGE);
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error generating QR Code", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnbarcodeActionPerformed

    private void btntambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntambahActionPerformed
   String nama = txtnama.getText();
    double harga = Double.parseDouble(txtharga.getText());
    int quantity = Integer.parseInt(txtquantity.getText());
    String seller = txtseller.getText();
    
    double total = harga * quantity;

   
    Date currentDate = new Date();
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String formattedDate = dateFormat.format(currentDate);

       try {       
        int existingItemId = getExistingItemId(nama, seller);

        if (existingItemId != -1) {
            updateTagihan(existingItemId, quantity, total);
        } else {
            insertTagihan(nama, harga, quantity, seller, formattedDate, total);
        }
        
        
        displayTagihanTable();

    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menambahkan data tagihan ke database", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }
      
    private int generateUniqueId() {
        return (int) (System.currentTimeMillis() % Integer.MAX_VALUE);
    
    }//GEN-LAST:event_btntambahActionPerformed

    private void btnhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusActionPerformed
         int selectedRow = tbltagihan.getSelectedRow();

    if (selectedRow != -1) {
        int id = (int) tbltagihan.getValueAt(selectedRow, 0);

        try {
            String deleteQuery = "DELETE FROM tbltagihan WHERE id = ?";
            try (PreparedStatement statement = connection.prepareStatement(deleteQuery)) {
                statement.setInt(1, id);

                
                statement.executeUpdate();
            }

            displayTagihanTable();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menghapus data dari database", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus dari tabel tagihan", "Peringatan", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_btnhapusActionPerformed

    private void billtoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billtoMouseClicked
    Bill billpage = new Bill();
    billpage.setVisible(true);
    this.dispose(); 
    }//GEN-LAST:event_billtoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Selling().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Logout;
    private javax.swing.JLabel billto;
    private javax.swing.JButton btnbarcode;
    private javax.swing.JButton btnhapus;
    private javax.swing.JButton btntambah;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbllist;
    private javax.swing.JTable tbltagihan;
    private javax.swing.JTextField txtharga;
    private javax.swing.JTextField txtnama;
    private javax.swing.JTextField txtquantity;
    private javax.swing.JTextField txtseller;
    // End of variables declaration//GEN-END:variables


    private void displayItemList() {
 
        
    try {
        String sql = "SELECT id, nama, kategori, harga FROM items";
        try (PreparedStatement statement = connection.prepareStatement(sql)) {
            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel model = (DefaultTableModel) tbllist.getModel();
            model.setRowCount(0);

            int lineNumber = 1;

            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String itemName = resultSet.getString("nama");
                String category = resultSet.getString("kategori");
                double price = resultSet.getDouble("harga");

                Vector<Object> row = new Vector<>(); 
                row.add(id);
                row.add(itemName);
                row.add(category);
                row.add(price);

                model.addRow(row);

                lineNumber++; 
            }
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengambil data item dari database", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }

    private void displayTagihanTable() {
       try {
        String sql = "SELECT id, nama, harga, quantity, seller, tanggal, total FROM tbltagihan";
        try (PreparedStatement statement = connection.prepareStatement(sql)) {
            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel model = (DefaultTableModel) tbltagihan.getModel();
            model.setRowCount(0);

            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String nama = resultSet.getString("nama");
                double harga = resultSet.getDouble("harga");
                int quantity = resultSet.getInt("quantity");
                String seller = resultSet.getString("seller");
                String tanggal = resultSet.getString("tanggal");
                double total = resultSet.getDouble("total");

                Vector<Object> row = new Vector<>();
                row.add(id);
                row.add(nama);
                row.add(harga);
                row.add(quantity);
                row.add(seller);
                row.add(tanggal);
                row.add(total);

                model.addRow(row);
            }
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengambil data tagihan dari database", "Error", JOptionPane.ERROR_MESSAGE);
    }

    }
private int getExistingItemId(String itemName, String seller) throws SQLException {
 String sql = "SELECT id FROM tbltagihan WHERE nama = ? AND seller = ?";
    try (PreparedStatement statement = connection.prepareStatement(sql)) {
        statement.setString(1, itemName);
        statement.setString(2, seller);
        ResultSet resultSet = statement.executeQuery();

        if (resultSet.next()) {
            return resultSet.getInt("id");
        } else {
            return -1;
        }
    }   
}


private void updateTagihan(int itemId, int quantity, double total) throws SQLException {
    String updateQuery = "UPDATE tbltagihan SET quantity = quantity + ?, total = total + ? WHERE id = ?";
    try (PreparedStatement statement = connection.prepareStatement(updateQuery)) {
        statement.setInt(1, quantity);
        statement.setDouble(2, total);
        statement.setInt(3, itemId);
        statement.executeUpdate();
    }
}



private void insertTagihan(String nama, double harga, int quantity, String seller, String formattedDate, double total) throws SQLException {
    
    int id = generateUniqueId();
    
    String insertQuery = "INSERT INTO tbltagihan (id, nama, harga, quantity, seller, tanggal, total) VALUES (?, ?, ?, ?, ?, ?, ?)";
    try (PreparedStatement statement = connection.prepareStatement(insertQuery)) {
        statement.setInt(1, id);
        statement.setString(2, nama);
        statement.setDouble(3, harga);
        statement.setInt(4, quantity);
        statement.setString(5, seller);
        statement.setString(6, formattedDate);
        statement.setDouble(7, total);

        statement.executeUpdate();
    }
    
}

    private void printBarcode(String filePath) {
        try {
        JOptionPane.showMessageDialog(this, "Barcode printed successfully!", "Printing", JOptionPane.INFORMATION_MESSAGE);
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error printing barcode", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }
}
